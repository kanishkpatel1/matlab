%=============== CROSS SHADE ===============
a=zeros(256);
[m n]=size(a);
for i=1:m
    for j=1:n
        if i<=n/2 && j>n/2 || i>=n/2 && j<n/2
            a(i,j)=1;
        end
        if i<10 || j<10 || i>m-10 || j>n-10
            a(i,j)=0;
        end
    end
end
imshow(a);



%================== HISTOGRAM MATCHING =================


i1=imread("cameraman.tif");
i2=zeros(256,2); 
for i=1:256 i2(i,1)=i-1; 
end c=0; 
for i=1:256 
 for j=1:256 
i2(i1(i,j)+1,2)=i2(i1(i,j)+1,2)+1; 
end 
end 
subplot(1,2,1); 
bar(i2(:,1),i2(:,2)) 
subplot(1,2,2) 
imhist(i1); 
for i=1:256 i2(i,3)=i2(i,2)/65536; 
end
 i2(1,4)=i2(1,3); 
for i=2:256 i2(i,4)=i2(i-1,4)+i2(i,3); 
end 
for i=1:256 
i2(i,5)=255*i2(i,4); 
end for i=1:256 
i2(i,6)=round(i2(i,5));
 end 
for i=1:256 
i3(i,1)=i-1; 
end



%=============== NEGATIVE IMAGE===============

a=imread('cameraman.tif');
subplot(1,2,1);
imshow(a);
title("Original image")
for i=1:256
    for j=1:256
        a(i,j)=255-a(i,j);
    end
end
subplot(1,2,2)
imshow(a);
title("Negative image")





%===============RGB BGR GRB   ===============


a=imread('Taj.jpg');
r=a(:,:,1);
g=a(:,:,2);
b=a(:,:,3);
c1=cat(3,r,g,b);
c2=cat(3,g,r,b);
c3=cat(3,b,r,g);
c4=cat(3,b,g,r);
c5=cat(3,g,b,r);
c6=cat(3,r,b,g);
subplot(3,2,1)
imshow(c1)
title('RGB')
subplot(3,2,2)
imshow(c2)
title('GRB')
subplot(3,2,3)
imshow(c3)
title('BRG')
subplot(3,2,4)
imshow(c4)
title('BGR')
subplot(3,2,5)
imshow(c5)
title('GBR')
subplot(3,2,6)
imshow(c6)
title('RBG')



%CHESS
clc;
a=zeros(10);
[m n]=size(a);
for i=1:m
    for j=1:n
        if mod(i+j,2)==0
            a(i,j)=1;
        end
    end
end
imshow(a)




%===============BIT PLANE SLICING USING FUNCTION===============


a=imread('cameraman.tif');
a1=bitget(a,1);
a1=cast(a1,'logical');
subplot(2,4,1);
imshow(a1);
title('1')
a2=bitget(a,2);
a2=cast(a2,'logical');
subplot(2,4,2);
imshow(a2);
title('2')
a3=bitget(a,3);
a3=cast(a3,'logical');
subplot(2,4,3);
imshow(a3);
title('3')
a4=bitget(a,4);
a4=cast(a4,'logical');
subplot(2,4,4);
imshow(a4);
title('4')
a5=bitget(a,5);
a5=cast(a5,'logical');
subplot(2,4,5);
imshow(a5);
title('5')
a6=bitget(a,6);
a6=cast(a6,'logical');
subplot(2,4,6);
imshow(a6);
title('6')
a7=bitget(a,7);
a7=cast(a7,'logical');
subplot(2,4,7);
imshow(a7);
title('7')
a8=bitget(a,8);
a8=cast(a8,'logical');
subplot(2,4,8);
imshow(a8);
title('8')


%===============GREY LEVEL SLICING===============


a=imread('cameraman.tif');
subplot(1,3,1);
imshow(a);
title("Original image")
for i=1:256
    for j=1:256
        if a(i,j)>=25 && a(i,j)<=218
            a(i,j)=255;
        
        end
    end
end
subplot(1,3,2)
imshow(a);
title("Grey scale image") 
a=imread("cameraman.tif");
for i=1:256
    for j=1:256
        if a(i,j)>=25 && a(i,j)<=150
            a(i,j)=255;
        else
            a(i,j)=0;
        end
    end
end
subplot(1,3,3)
imshow(a);
title("Grey scale image with background")



%===============LAPLACIAN  L4, L(-4) , L(8) , L(-8)===============




a1=imread("cameraman.tif");
b=imread("cameraman.tif");
%a1=imnoise(a,'gaussian');
%a2=imnoise(a,'salt & pepper');
a1=cast(a1, 'double');
m1=ones(3,3);
m1=cast(m1,'double');

subplot(1,2,1);
imshow(a1);
title("Gaussian noise");

for i=1:3
    for j=1:3
        m1(i,j)=1/9;
    end
end

for i=2:255
    for j=2:255
        b(i,j)=a1(i-1,j-1)0 +a1(i-1,j)*1+a1(i-1,j+1)*0+a1(i,j-1)*1+a1(i,j)(-4)+a1(i,j+1)*1+a1(i+1,j-1)*0+a1(i+1,j)*1+a1(i+1,j+1)*0;
    end
end

for i=2:255
    for j=2:255
        c(i,j)=a1(i-1,j-1)1+a1(i-1,j)*1+a1(i-1,j+1)*1+a1(i,j-1)*1+a1(i,j)(-8)+a1(i,j+1)*1+a1(i+1,j-1)*1+a1(i+1,j)*1+a1(i+1,j+1)*1;
    end
end

for i=2:255
    for j=2:255
        d(i,j)=a1(i-1,j-1)0+a1(i-1,j)(-1)+a1(i-1,j+1)0+a1(i,j-1)(-1)+a1(i,j)(4)+a1(i,j+1)(-1)+a1(i+1,j-1)0+a1(i+1,j)(-1)+a1(i+1,j+1)*0;
    end
end

for i=2:255
    for j=2:255
        e(i,j)=a1(i-1,j-1)(-1)+a1(i-1,j)(-1)+a1(i-1,j+1)(-1)+a1(i,j-1)(-1)+a1(i,j)(8)+a1(i,j+1)(-1)+a1(i+1,j-1)(-1)+a1(i+1,j)(-1)+a1(i+1,j+1)*(-1);
    end
end

subplot(2,2,1);
imshow(uint8(b));
title("L(-4)Filtered Image");

subplot(2,2,2);
imshow(uint8(c));
title("L(-8)Filtered Image");

subplot(2,2,3);
imshow(uint8(d));
title("L(4)Filtered Image");

subplot(2,2,4);
imshow(uint8(e));
title("L(8)Filtered Image");


% ===============MIN MAX MEDIAN ===============




i1=imread('cameraman.tif');
i2=zeros(256,256);
i2=cast(i2,'uint8');
i3=zeros(256,256);
i3=cast(i2,'uint8');
i4=zeros(256,256);
i4=cast(i2,'uint8');
for i=2:255
    for j=2:255
         mina(1)=i1(i-1,j);
         mina(2)=i1(i-1,j+1);
         mina(3)=i1(i-1,j-1);
         mina(4)=i1(i,j-1);
         mina(5)=i1(i,j);
         mina(6)=i1(i,j+1);
         mina(7)=i1(i+1,j-1);
         mina(8)=i1(i+1,j);
         mina(9)=i1(i+1,j+1);
         minans=257;
         maxans=0;
         for k=1 : 9
             minans=min(mina(k),minans);
             maxans=max(mina(k),maxans);
         end
         i2(i,j)=minans;
         i3(i,j)=maxans;
         b=sort(mina);
         i4(i,j)=b(5);


    end
end

subplot(1,4,1);
imshow(i1);
subplot(1,4,2);
imshow(i2)
subplot(1,4,3);
imshow(i3);
subplot(1,4,4);
imshow(i4)


======================= AVERAGE , WEIGHTED AVERAGE    ============




i1=imread('cameraman.tif');
i1=cast(i1,'double');
i2=zeros(256,256);
i2=cast(i2,'uint8');
i3=zeros(256,256);
i3=cast(i3,'uint8');
i4=zeros(256,256);
min=zeros(9);
max=zeros(9);
for i=2:255
    for j=2:255
        i2(i,j)=i1(i-1,j-1)/9+i1(i-1,j)/9+i1(i-1,j+1)/9+i1(i,j-1)/9+i1(i,j)/9+i1(i,j+1)/9+i1(i+1,j-1)/9+i1(i+1,j)/9+i1(i+1,j+1)/9;

    end
end

for i=4:253
    for j=4:253
        i3(i,j)=i1(i-2,j-2)/25+i1(i-2,j-1)/25+i1(i-2,j)/25+i1(i-2,j+1)/25+i1(i-2,j+2)/25+i1(i-1,j-2)/25+i1(i-1,j-1)/25+i1(i-1,j)/25+i1(i-1,j)/25+i1(i-1,j+1)/25+i1(i-1,j+2)/25+i1(i,j-2)/25+i1(i,j-1)/25+i1(i,j)/25+i1(i,j+1)/25+i1(i,j+2)/25+i1(i+1,j-2)/25+i1(i+1,j-1)/25+i1(i+1,j)/25+i1(i+1,j+1)/25+i1(i+1,j+2)/25+i1(i+2,j-2)/25+i1(i+2,j-1)/25+i1(i+2,j)/25+i1(i+2,j+1)/25+i1(i+2,j+2)/25;

    end
end

% weighted avg
for i=2:255
    for j=2:255
        i4(i,j)=i1(i-1,j-1)/16+(2*i1(i-1,j))/16+i1(i-1,j+1)/16+(2*i1(i,j-1))/16+(4*i1(i,j))/16+(2*i1(i,j+1))/16+i1(i+1,j-1)/16+(2*i1(i+1,j))/16+i1(i+1,j+1)/16;

    end
end

%min max function
for i=2:255
    for j=2:255
        i4(i,j)=i1(i-1,j-1)/16+(2*i1(i-1,j))/16+i1(i-1,j+1)/16+(2*i1(i,j-1))/16+(4*i1(i,j))/16+(2*i1(i,j+1))/16+i1(i+1,j-1)/16+(2*i1(i+1,j))/16+i1(i+1,j+1)/16;

    end
end

i1=cast(i1,'uint8');
i4=cast(i4,'uint8');
subplot(1,4,1);
imshow(i1)
 subplot(1,4,2);
imshow(i2);
subplot(1,4,3);
imshow(i3);
subplot(1,4,4);
imshow(i4);






====================== OPENING OPERATION===============





i1=imread("cameraman.tif");
i1 = imbinarize(i1);
i2=zeros(256,256);
i3=zeros(256,256);
i4=zeros(256,256);

for i = 2:255
    for j = 2:255
        if(i1(i-1,j) == 1 && i1(i+1,j) == 1 && i1(i,j-1) == 1 && i1(i,j+1) == 1 && i1(i-1,j-1) == 1 && i1(i-1,j+1) == 1 && i1(i+1,j-1) == 1 && i1(i+1,j+1) == 1 && i1(i,j) == 1)
            i2(i,j) = 1;        
        end
    end
end
for i = 2:255
    for j = 2:255
        if(i2(i-1,j) == 1 || i2(i+1,j) == 1 || i2(i,j-1) == 1 || i2(i,j+1) == 1 || i2(i-1,j-1) == 1 || i2(i-1,j+1) == 1 || i2(i+1,j-1) == 1 || i2(i+1,j+1) == 1 || i2(i,j) == 1)
            i3(i,j) = 1;         
        end

        i4(i,j)=i1(i,j)-i3(i,j);
    end
end
subplot(2,2,1)
imshow(i1);
title('Original image')

i2=imbinarize(i2);
subplot(2,2,2)
imshow(i2);
title('Erosion');

i3=imbinarize(i3);
subplot(2,2,3)
imshow(i3);
title('Dilation of erosion');

subplot(2,2,4)
imshow(i4);
title('Dilation of erosion -original image');





CLOSING OPERATION



i1=imread("cameraman.tif");
i1 = imbinarize(i1);
i2=zeros(256,256);
i3=zeros(256,256);
i4=zeros(256,256);

for i = 2:255
    for j = 2:255
        if(i1(i-1,j) == 1 || i1(i+1,j) == 1 || i1(i,j-1) == 1 || i1(i,j+1) == 1 || i1(i-1,j-1) == 1 || i1(i-1,j+1) == 1 || i1(i+1,j-1) == 1 || i1(i+1,j+1) == 1 || i1(i,j) == 1)
            i2(i,j) = 1;         
        end

    end
end

for i = 2:255
    for j = 2:255
        if(i2(i-1,j) == 1 && i2(i+1,j) == 1 && i2(i,j-1) == 1 && i2(i,j+1) == 1 && i2(i-1,j-1) == 1 && i2(i-1,j+1) == 1 && i2(i+1,j-1) == 1 && i2(i+1,j+1) == 1 && i2(i,j) == 1)
            i3(i,j) = 1;        
        end
            i4(i,j)=i3(i,j)-i1(i,j);

    end
end
subplot(2,2,1)
imshow(i1);
title('Original image')

i2=imbinarize(i2);
subplot(2,2,2)
imshow(i2);
title('Dilation');

i3=imbinarize(i3);
subplot(2,2,3)
imshow(i3);
title('erosion of dilation');

subplot(2,2,4)
imshow(i4);
title('erosion of dilation -original image');


INTERNAL AND EXTERNAL BOUNDARY 


i1=imread("cameraman.tif");
i1 = imbinarize(i1);
i2=zeros(256,256);
i3=zeros(256,256);
i4=zeros(256,256);
i5=zeros(256,256);

for i = 2:255
    for j = 2:255
        if(i1(i-1,j) == 1 && i1(i+1,j) == 1 && i1(i,j-1) == 1 && i1(i,j+1) == 1 && i1(i-1,j-1) == 1 && i1(i-1,j+1) == 1 && i1(i+1,j-1) == 1 && i1(i+1,j+1) == 1 && i1(i,j) == 1)
            i2(i,j) = 1;        
        end
        i3(i,j)=i1(i,j)-i2(i,j);
    end
end

for i = 2:255
    for j = 2:255
        if(i1(i-1,j) == 1 || i1(i+1,j) == 1 || i1(i,j-1) == 1 || i1(i,j+1) == 1 || i1(i-1,j-1) == 1 || i1(i-1,j+1) == 1 || i1(i+1,j-1) == 1 || i1(i+1,j+1) == 1 || i1(i,j) == 1)
            i4(i,j) = 1;         
        end
           i5(i,j)=i4(i,j)-i1(i,j);
    end
end

subplot(2,3,1)
imshow(i1);
title('Original image')

i2=imbinarize(i2);
subplot(2,3,2)
imshow(i2);
title('erosion');

i3=imbinarize(i3);
subplot(2,3,3)
imshow(i3);
title('internal boundary');

i4=imbinarize(i4);
subplot(2,3,4)
imshow(i4);
title('dilation');

i5=imbinarize(i5);
subplot(2,3,5)
imshow(i5);
title('external boundary');



LINE DETECTION




i1=imread("cameraman.tif");
i1=cast(i1,'double');
i2=zeros(256,256);
i2=cast(i2,'uint8');
i3=zeros(256,256);
i3=cast(i3,'uint8');
i4=zeros(256,256);
i4=cast(i4,'uint8');
i5=zeros(256,256);
i5=cast(i5,'uint8');
i6=zeros(256,256);
i6=cast(i6,'uint8');

for i=2:255
    for j=2:255
        i2(i,j)=i1(i-1,j-1)(-1)+i1(i-1,j)(-1)+i1(i-1,j+1)(-1)+i1(i,j-1)(2)+i1(i,j)(2)+i1(i,j+1)(2)+i1(i+1,j-1)(-1)+i1(i+1,j)(-1)+i1(i+1,j+1)*(-1);
    end
end

for i=2:255
    for j=2:255
        i3(i,j)=i1(i-1,j-1)(-1)+i1(i-1,j)(-1)+i1(i-1,j+1)(2)+i1(i,j-1)(-1)+i1(i,j)(2)+i1(i,j+1)(-1)+i1(i+1,j-1)(2)+i1(i+1,j)(-1)+i1(i+1,j+1)*(-1);
    end
end

for i=2:255
    for j=2:255
        i4(i,j)=i1(i-1,j-1)(-1)+i1(i-1,j)(2)+i1(i-1,j+1)(-1)+i1(i,j-1)(-1)+i1(i,j)(2)+i1(i,j+1)(-1)+i1(i+1,j-1)(-1)+i1(i+1,j)(2)+i1(i+1,j+1)*(-1);
    end
end

for i=2:255
    for j=2:255
        i5(i,j)=i1(i-1,j-1)(2)+i1(i-1,j)(-1)+i1(i-1,j+1)(-1)+i1(i,j-1)(-1)+i1(i,j)(2)+i1(i,j+1)(-1)+i1(i+1,j-1)(-1)+i1(i+1,j)(-1)+i1(i+1,j+1)*(2);
    end
end

for i=2:255
    for j=2:255
        a=max(i2(i,j),i3(i,j));
        b=max(i4(i,j),i5(i,j));
        i6(i,j)=max(a,b);
    end
end

i1=cast(i1,'uint8');
subplot(2,3,1)
imshow(i1);
subplot(2,3,2)
imshow(i2);
subplot(2,3,3)
imshow(i3);
subplot(2,3,4)
imshow(i4);
subplot(2,3,5)
imshow(i5);
subplot(2,3,6)
imshow(i6);




EDGE DETECTION  USING FUNCTION 



i1=imread("cameraman.tif");
i2=edge(i1,'canny');
i3=edge(i1,'canny',0.5);
i4=edge(i1,'sobel');
i5=edge(i1,'roberts',0.2);
i6=edge(i1,'prewitt');
i7=bwareaopen(i2,50);

      
subplot(2,3,1)
imshow(i2);
title('canny')
subplot(2,3,2)
imshow(i3);
title('threshold')
subplot(2,3,3)
imshow(i4);
title('sobel')
subplot(2,3,4)
imshow(i5);
title('roberts')
subplot(2,3,5)
imshow(i6);
title('prewitt')
subplot(2,3,6)
imshow(i7);




%Sobel using loops



im=imread("cameraman.tif");
a1=im2bw(im);
a1= cast(a1,'double');
subplot(2,3,1);
imshow(im);
title("original image")
b=zeros(256,256);
c=zeros(256,256);
d=zeros(256,256);
e=zeros(256,256);
f=zeros(256,256);
for i=2:255
    for j=2:255
        b(i,j)=a1(i-1,j-1)(-1) +a1(i-1,j)(-2)+a1(i-1,j+1)(-1)+a1(i,j-1)*0+a1(i,j)(0)+a1(i,j+1)0+a1(i+1,j-1)(1)+a1(i+1,j)(2)+a1(i+1,j+1)(1);
    end
end
subplot(2,3,2);
imshow(b);
title("Gx")
for i=2:255
    for j=2:255
        d(i,j)=a1(i-1,j-1)(-1) +a1(i-1,j)(0)+a1(i-1,j+1)(1)+a1(i,j-1)(-2)+a1(i,j)(0)+a1(i,j+1)*2+a1(i+1,j-1)(-1)+a1(i+1,j)(0)+a1(i+1,j+1)(1);
    end
end
subplot(2,3,3);
imshow(d);
title("Gy")
i = b + d;
subplot(2,3,4)
imshow(i);
title("Gx+Gy")
for i=2:255
    for j=2:255
        f(i,j)= sqrt((b(i,j)*b(i,j))+(d(i,j)*d(i,j)));
    end
end
subplot(2,3,5);
imshow(f);
title("sobel"

